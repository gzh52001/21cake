{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:jsx-no-multiline-js */\n\nimport * as React from 'react';\nimport RMCCascader from 'rmc-cascader/es/Cascader';\nimport RMCMultiPicker from 'rmc-picker/es/MultiPicker';\nimport RMCPicker from 'rmc-picker/es/Picker';\n\nfunction getDefaultProps() {\n  return {\n    prefixCls: 'am-picker',\n    pickerPrefixCls: 'am-picker-col',\n    cols: 3,\n    cascade: true,\n    value: [],\n    onChange: function onChange() {}\n  };\n}\n\nvar PickerView = function (_React$Component) {\n  _inherits(PickerView, _React$Component);\n\n  function PickerView() {\n    _classCallCheck(this, PickerView);\n\n    var _this = _possibleConstructorReturn(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));\n\n    _this.isMultiPicker = function () {\n      if (!_this.props.data) {\n        return false;\n      }\n\n      return Array.isArray(_this.props.data[0]);\n    };\n\n    _this.getCol = function () {\n      var _this$props = _this.props,\n          data = _this$props.data,\n          pickerPrefixCls = _this$props.pickerPrefixCls,\n          indicatorStyle = _this$props.indicatorStyle,\n          itemStyle = _this$props.itemStyle;\n      var formattedData = _this.isMultiPicker() ? data : [data];\n      return formattedData.map(function (col, index) {\n        return React.createElement(RMCPicker, {\n          key: index,\n          prefixCls: pickerPrefixCls,\n          style: {\n            flex: 1\n          },\n          indicatorStyle: indicatorStyle,\n          itemStyle: itemStyle\n        }, col.map(function (item) {\n          return React.createElement(RMCPicker.Item, {\n            key: item.value,\n            value: item.value\n          }, item.label);\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerView, [{\n    key: 'render',\n    value: function render() {\n      // tslint:disable-next-line:no-this-assignment\n      var props = this.props;\n      var picker = void 0;\n\n      if (props.cascade) {\n        picker = React.createElement(RMCCascader, {\n          prefixCls: props.prefixCls,\n          pickerPrefixCls: props.pickerPrefixCls,\n          data: props.data,\n          value: props.value,\n          onChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          cols: props.cols,\n          indicatorStyle: props.indicatorStyle,\n          pickerItemStyle: props.itemStyle\n        });\n      } else {\n        picker = React.createElement(RMCMultiPicker, {\n          prefixCls: props.prefixCls,\n          selectedValue: props.value,\n          onValueChange: props.onChange,\n          onScrollChange: props.onScrollChange,\n          style: {\n            flexDirection: 'row'\n          }\n        }, this.getCol());\n      }\n\n      return picker;\n    }\n  }]);\n\n  return PickerView;\n}(React.Component);\n\nexport default PickerView;\nPickerView.defaultProps = getDefaultProps();","map":{"version":3,"sources":["F:/1111111111/demo2/线下三阶段/三阶段小组项目/react/21cake/mycake/node_modules/antd-mobile/es/picker-view/PickerView.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","RMCCascader","RMCMultiPicker","RMCPicker","getDefaultProps","prefixCls","pickerPrefixCls","cols","cascade","value","onChange","PickerView","_React$Component","_this","__proto__","Object","getPrototypeOf","apply","arguments","isMultiPicker","props","data","Array","isArray","getCol","_this$props","indicatorStyle","itemStyle","formattedData","map","col","index","createElement","key","style","flex","item","Item","label","render","picker","onScrollChange","pickerItemStyle","selectedValue","onValueChange","flexDirection","Component","defaultProps"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:jsx-no-multiline-js */\nimport * as React from 'react';\nimport RMCCascader from 'rmc-cascader/es/Cascader';\nimport RMCMultiPicker from 'rmc-picker/es/MultiPicker';\nimport RMCPicker from 'rmc-picker/es/Picker';\nfunction getDefaultProps() {\n    return {\n        prefixCls: 'am-picker',\n        pickerPrefixCls: 'am-picker-col',\n        cols: 3,\n        cascade: true,\n        value: [],\n        onChange: function onChange() {}\n    };\n}\n\nvar PickerView = function (_React$Component) {\n    _inherits(PickerView, _React$Component);\n\n    function PickerView() {\n        _classCallCheck(this, PickerView);\n\n        var _this = _possibleConstructorReturn(this, (PickerView.__proto__ || Object.getPrototypeOf(PickerView)).apply(this, arguments));\n\n        _this.isMultiPicker = function () {\n            if (!_this.props.data) {\n                return false;\n            }\n            return Array.isArray(_this.props.data[0]);\n        };\n        _this.getCol = function () {\n            var _this$props = _this.props,\n                data = _this$props.data,\n                pickerPrefixCls = _this$props.pickerPrefixCls,\n                indicatorStyle = _this$props.indicatorStyle,\n                itemStyle = _this$props.itemStyle;\n\n            var formattedData = _this.isMultiPicker() ? data : [data];\n            return formattedData.map(function (col, index) {\n                return React.createElement(\n                    RMCPicker,\n                    { key: index, prefixCls: pickerPrefixCls, style: { flex: 1 }, indicatorStyle: indicatorStyle, itemStyle: itemStyle },\n                    col.map(function (item) {\n                        return React.createElement(\n                            RMCPicker.Item,\n                            { key: item.value, value: item.value },\n                            item.label\n                        );\n                    })\n                );\n            });\n        };\n        return _this;\n    }\n\n    _createClass(PickerView, [{\n        key: 'render',\n        value: function render() {\n            // tslint:disable-next-line:no-this-assignment\n            var props = this.props;\n\n            var picker = void 0;\n            if (props.cascade) {\n                picker = React.createElement(RMCCascader, { prefixCls: props.prefixCls, pickerPrefixCls: props.pickerPrefixCls, data: props.data, value: props.value, onChange: props.onChange, onScrollChange: props.onScrollChange, cols: props.cols, indicatorStyle: props.indicatorStyle, pickerItemStyle: props.itemStyle });\n            } else {\n                picker = React.createElement(\n                    RMCMultiPicker,\n                    { prefixCls: props.prefixCls, selectedValue: props.value, onValueChange: props.onChange, onScrollChange: props.onScrollChange, style: { flexDirection: 'row' } },\n                    this.getCol()\n                );\n            }\n            return picker;\n        }\n    }]);\n\n    return PickerView;\n}(React.Component);\n\nexport default PickerView;\n\nPickerView.defaultProps = getDefaultProps();"]},"metadata":{},"sourceType":"module"}