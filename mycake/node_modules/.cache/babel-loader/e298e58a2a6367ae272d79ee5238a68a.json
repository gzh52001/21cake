{"ast":null,"code":"// 封装ajax请求\n// fetch（url,options）\nconst baseUrl = process.env.NODE_ENV === 'development' ? 'http://120.24.22.195:4099' : 'http://120.24.22.195:4099/';\nexport async function request(url, data = {}, options = {}) {\n  url = baseUrl + url;\n\n  if (options.method) {\n    options.method = options.method.toLowerCase();\n  }\n\n  if (options.method === 'get' || options.get === undefined) {\n    const params = [];\n\n    for (const key in data) {\n      params.push(`${key}=${data[key]}`);\n    }\n\n    url = url + (url.includes('?') ? '&' : '?') + params.join('&');\n  } else if (['post', 'put', 'patch'].includes(options.method)) {\n    data = JSON.stringify(data);\n    options.headers['content-type'] = 'application/json';\n  }\n\n  return await fetch(url, { ...options,\n    data\n  }).then(res => res.json());\n}\nexport function get(url, data, options) {\n  return request(url, data, options);\n}\nexport function post(url, data, options = {\n  method: 'post'\n}) {\n  return request(url, data, options);\n}\nexport function remove(url, data, options = {\n  method: 'delete'\n}) {\n  return request(url, data, options);\n}\nexport function put(url, data, options = {\n  method: 'put'\n}) {\n  return request(url, data, options);\n}\nexport function patch(url, data, options = {\n  method: 'patch'\n}) {\n  return request(url, data, options);\n}\nexport default {\n  request,\n  get,\n  post,\n  put,\n  patch,\n  remove\n};","map":{"version":3,"sources":["F:/1111111111/demo2/线下三阶段/三阶段小组项目/react/21cake/mycake/src/utils/http.js"],"names":["baseUrl","process","env","NODE_ENV","request","url","data","options","method","toLowerCase","get","undefined","params","key","push","includes","join","JSON","stringify","headers","fetch","then","res","json","post","remove","put","patch"],"mappings":"AAAA;AACA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAwB,aAAxB,GAAwC,2BAAxC,GAAsE,4BAAtF;AACA,OAAO,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,IAAI,GAAG,EAAnC,EAAuCC,OAAO,GAAG,EAAjD,EAAoD;AACvDF,EAAAA,GAAG,GAAGL,OAAO,GAACK,GAAd;;AACA,MAAGE,OAAO,CAACC,MAAX,EAAkB;AACdD,IAAAA,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACC,MAAR,CAAeC,WAAf,EAAjB;AACH;;AACD,MAAGF,OAAO,CAACC,MAAR,KAAkB,KAAlB,IAA2BD,OAAO,CAACG,GAAR,KAAgBC,SAA9C,EAAwD;AACpD,UAAMC,MAAM,GAAE,EAAd;;AACA,SAAI,MAAMC,GAAV,IAAiBP,IAAjB,EAAsB;AAClBM,MAAAA,MAAM,CAACE,IAAP,CAAa,GAAED,GAAI,IAAGP,IAAI,CAACO,GAAD,CAAM,EAAhC;AACH;;AACDR,IAAAA,GAAG,GAAGA,GAAG,IAAEA,GAAG,CAACU,QAAJ,CAAa,GAAb,IAAoB,GAApB,GAA0B,GAA5B,CAAH,GAAsCH,MAAM,CAACI,IAAP,CAAY,GAAZ,CAA5C;AACH,GAND,MAMM,IAAG,CAAC,MAAD,EAAQ,KAAR,EAAc,OAAd,EAAuBD,QAAvB,CAAgCR,OAAO,CAACC,MAAxC,CAAH,EAAmD;AACrDF,IAAAA,IAAI,GAAGW,IAAI,CAACC,SAAL,CAAeZ,IAAf,CAAP;AACAC,IAAAA,OAAO,CAACY,OAAR,CAAgB,cAAhB,IAAgC,kBAAhC;AACH;;AACD,SAAO,MAAMC,KAAK,CAACf,GAAD,EAAK,EACnB,GAAGE,OADgB;AAEnBD,IAAAA;AAFmB,GAAL,CAAL,CAGVe,IAHU,CAGLC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAHA,CAAb;AAIH;AACD,OAAO,SAASb,GAAT,CAAaL,GAAb,EAAiBC,IAAjB,EAAsBC,OAAtB,EAA8B;AACjC,SAAOH,OAAO,CAACC,GAAD,EAAKC,IAAL,EAAUC,OAAV,CAAd;AACH;AACD,OAAO,SAASiB,IAAT,CAAcnB,GAAd,EAAkBC,IAAlB,EAAuBC,OAAO,GAAC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA/B,EAA+C;AAClD,SAAOJ,OAAO,CAACC,GAAD,EAAKC,IAAL,EAAUC,OAAV,CAAd;AACH;AACD,OAAO,SAASkB,MAAT,CAAgBpB,GAAhB,EAAoBC,IAApB,EAAyBC,OAAO,GAAC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAAjC,EAAmD;AACtD,SAAOJ,OAAO,CAACC,GAAD,EAAKC,IAAL,EAAUC,OAAV,CAAd;AACH;AACD,OAAO,SAASmB,GAAT,CAAarB,GAAb,EAAiBC,IAAjB,EAAsBC,OAAO,GAAC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA9B,EAA6C;AAChD,SAAOJ,OAAO,CAACC,GAAD,EAAKC,IAAL,EAAUC,OAAV,CAAd;AACH;AACD,OAAO,SAASoB,KAAT,CAAetB,GAAf,EAAmBC,IAAnB,EAAwBC,OAAO,GAAC;AAACC,EAAAA,MAAM,EAAC;AAAR,CAAhC,EAAiD;AACpD,SAAOJ,OAAO,CAACC,GAAD,EAAKC,IAAL,EAAUC,OAAV,CAAd;AACH;AACD,eAAc;AACVH,EAAAA,OADU;AAEVM,EAAAA,GAFU;AAGVc,EAAAA,IAHU;AAIVE,EAAAA,GAJU;AAKVC,EAAAA,KALU;AAMVF,EAAAA;AANU,CAAd","sourcesContent":["// 封装ajax请求\r\n// fetch（url,options）\r\nconst baseUrl = process.env.NODE_ENV ==='development' ? 'http://120.24.22.195:4099' : 'http://120.24.22.195:4099/'\r\nexport async function request(url, data = {}, options = {}){\r\n    url = baseUrl+url;\r\n    if(options.method){\r\n        options.method = options.method.toLowerCase();\r\n    }\r\n    if(options.method ==='get' || options.get === undefined){\r\n        const params =[]\r\n        for(const key in data){\r\n            params.push(`${key}=${data[key]}`)\r\n        }\r\n        url = url+(url.includes('?') ? '&' : '?') + params.join('&')\r\n    }else if(['post','put','patch'].includes(options.method)){\r\n        data = JSON.stringify(data);\r\n        options.headers['content-type']='application/json';\r\n    }\r\n    return await fetch(url,{\r\n        ...options,\r\n        data\r\n    }).then(res=>res.json());\r\n}\r\nexport function get(url,data,options){\r\n    return request(url,data,options)\r\n}\r\nexport function post(url,data,options={method:'post'}){\r\n    return request(url,data,options)\r\n}\r\nexport function remove(url,data,options={method:'delete'}){\r\n    return request(url,data,options)\r\n}\r\nexport function put(url,data,options={method:'put'}){\r\n    return request(url,data,options)\r\n}\r\nexport function patch(url,data,options={method:'patch'}){\r\n    return request(url,data,options)\r\n}\r\nexport default{\r\n    request,\r\n    get,\r\n    post,\r\n    put,\r\n    patch,\r\n    remove\r\n}"]},"metadata":{},"sourceType":"module"}