{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nfunction getOffset(ele) {\n  var el = ele;\n  var _x = 0;\n  var _y = 0;\n\n  while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n    _x += el.offsetLeft - el.scrollLeft;\n    _y += el.offsetTop - el.scrollTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    top: _y,\n    left: _x\n  };\n}\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\n\nvar Drawer = function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  function Drawer(props) {\n    _classCallCheck(this, Drawer);\n\n    var _this = _possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this, props));\n\n    _this.onOverlayClicked = function () {\n      if (_this.props.open) {\n        // see https://github.com/react-component/drawer/issues/9\n        setTimeout(function () {\n          _this.props.onOpenChange(false, {\n            overlayClicked: true\n          });\n        }, 0);\n      }\n    };\n\n    _this.onTouchStart = function (ev) {\n      // filter out if a user starts swiping with a second finger\n      if (!_this.isTouching()) {\n        var touch = ev.targetTouches[0];\n\n        _this.setState({\n          touchIdentifier: !_this.notTouch ? touch.identifier : null,\n          touchStartX: touch.clientX,\n          touchStartY: touch.clientY,\n          touchCurrentX: touch.clientX,\n          touchCurrentY: touch.clientY\n        });\n      }\n    };\n\n    _this.onTouchMove = function (ev) {\n      // ev.preventDefault(); // cannot touchmove with FastClick\n      if (_this.isTouching()) {\n        for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n          // we only care about the finger that we are tracking\n          if (ev.targetTouches[ind].identifier === _this.state.touchIdentifier) {\n            _this.setState({\n              touchCurrentX: ev.targetTouches[ind].clientX,\n              touchCurrentY: ev.targetTouches[ind].clientY\n            });\n\n            break;\n          }\n        }\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      _this.notTouch = false;\n\n      if (_this.isTouching()) {\n        // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n        var touchWidth = _this.touchSidebarWidth();\n\n        if (_this.props.open && touchWidth < _this.state.sidebarWidth - _this.props.dragToggleDistance || !_this.props.open && touchWidth > _this.props.dragToggleDistance) {\n          _this.props.onOpenChange(!_this.props.open);\n        }\n\n        var touchHeight = _this.touchSidebarHeight();\n\n        if (_this.props.open && touchHeight < _this.state.sidebarHeight - _this.props.dragToggleDistance || !_this.props.open && touchHeight > _this.props.dragToggleDistance) {\n          _this.props.onOpenChange(!_this.props.open);\n        }\n\n        _this.setState({\n          touchIdentifier: null,\n          touchStartX: null,\n          touchStartY: null,\n          touchCurrentX: null,\n          touchCurrentY: null\n        });\n      }\n    };\n\n    _this.onScroll = function () {\n      if (_this.isTouching() && _this.inCancelDistanceOnScroll()) {\n        _this.setState({\n          touchIdentifier: null,\n          touchStartX: null,\n          touchStartY: null,\n          touchCurrentX: null,\n          touchCurrentY: null\n        });\n      }\n    };\n\n    _this.inCancelDistanceOnScroll = function () {\n      var cancelDistanceOnScroll = void 0;\n\n      switch (_this.props.position) {\n        case 'right':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchCurrentX - _this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n\n        case 'bottom':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchCurrentY - _this.state.touchStartY) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n\n        case 'top':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchStartY - _this.state.touchCurrentY) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n\n        case 'left':\n        default:\n          cancelDistanceOnScroll = Math.abs(_this.state.touchStartX - _this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n      }\n\n      return cancelDistanceOnScroll;\n    };\n\n    _this.isTouching = function () {\n      return _this.state.touchIdentifier !== null;\n    };\n\n    _this.saveSidebarSize = function () {\n      var sidebar = ReactDOM.findDOMNode(_this.refs.sidebar);\n      var width = sidebar.offsetWidth;\n      var height = sidebar.offsetHeight;\n      var sidebarTop = getOffset(ReactDOM.findDOMNode(_this.refs.sidebar)).top;\n      var dragHandleTop = getOffset(ReactDOM.findDOMNode(_this.refs.dragHandle)).top;\n\n      if (width !== _this.state.sidebarWidth) {\n        _this.setState({\n          sidebarWidth: width\n        });\n      }\n\n      if (height !== _this.state.sidebarHeight) {\n        _this.setState({\n          sidebarHeight: height\n        });\n      }\n\n      if (sidebarTop !== _this.state.sidebarTop) {\n        _this.setState({\n          sidebarTop: sidebarTop\n        });\n      }\n\n      if (dragHandleTop !== _this.state.dragHandleTop) {\n        _this.setState({\n          dragHandleTop: dragHandleTop\n        });\n      }\n    };\n\n    _this.touchSidebarWidth = function () {\n      // if the sidebar is open and start point of drag is inside the sidebar\n      // we will only drag the distance they moved their finger\n      // otherwise we will move the sidebar to be below the finger.\n      if (_this.props.position === 'right') {\n        if (_this.props.open && window.innerWidth - _this.state.touchStartX < _this.state.sidebarWidth) {\n          if (_this.state.touchCurrentX > _this.state.touchStartX) {\n            return _this.state.sidebarWidth + _this.state.touchStartX - _this.state.touchCurrentX;\n          }\n\n          return _this.state.sidebarWidth;\n        }\n\n        return Math.min(window.innerWidth - _this.state.touchCurrentX, _this.state.sidebarWidth);\n      }\n\n      if (_this.props.position === 'left') {\n        if (_this.props.open && _this.state.touchStartX < _this.state.sidebarWidth) {\n          if (_this.state.touchCurrentX > _this.state.touchStartX) {\n            return _this.state.sidebarWidth;\n          }\n\n          return _this.state.sidebarWidth - _this.state.touchStartX + _this.state.touchCurrentX;\n        }\n\n        return Math.min(_this.state.touchCurrentX, _this.state.sidebarWidth);\n      }\n    };\n\n    _this.touchSidebarHeight = function () {\n      // if the sidebar is open and start point of drag is inside the sidebar\n      // we will only drag the distance they moved their finger\n      // otherwise we will move the sidebar to be below the finger.\n      if (_this.props.position === 'bottom') {\n        if (_this.props.open && window.innerHeight - _this.state.touchStartY < _this.state.sidebarHeight) {\n          if (_this.state.touchCurrentY > _this.state.touchStartY) {\n            return _this.state.sidebarHeight + _this.state.touchStartY - _this.state.touchCurrentY;\n          }\n\n          return _this.state.sidebarHeight;\n        }\n\n        return Math.min(window.innerHeight - _this.state.touchCurrentY, _this.state.sidebarHeight);\n      }\n\n      if (_this.props.position === 'top') {\n        var touchStartOffsetY = _this.state.touchStartY - _this.state.sidebarTop;\n\n        if (_this.props.open && touchStartOffsetY < _this.state.sidebarHeight) {\n          if (_this.state.touchCurrentY > _this.state.touchStartY) {\n            return _this.state.sidebarHeight;\n          }\n\n          return _this.state.sidebarHeight - _this.state.touchStartY + _this.state.touchCurrentY;\n        }\n\n        return Math.min(_this.state.touchCurrentY - _this.state.dragHandleTop, _this.state.sidebarHeight);\n      }\n    };\n\n    _this.renderStyle = function (_ref) {\n      var sidebarStyle = _ref.sidebarStyle,\n          isTouching = _ref.isTouching,\n          overlayStyle = _ref.overlayStyle,\n          contentStyle = _ref.contentStyle;\n\n      if (_this.props.position === 'right' || _this.props.position === 'left') {\n        sidebarStyle.transform = 'translateX(0%)';\n        sidebarStyle.WebkitTransform = 'translateX(0%)';\n\n        if (isTouching) {\n          var percentage = _this.touchSidebarWidth() / _this.state.sidebarWidth; // slide open to what we dragged\n\n\n          if (_this.props.position === 'right') {\n            sidebarStyle.transform = 'translateX(' + (1 - percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateX(' + (1 - percentage) * 100 + '%)';\n          }\n\n          if (_this.props.position === 'left') {\n            sidebarStyle.transform = 'translateX(-' + (1 - percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateX(-' + (1 - percentage) * 100 + '%)';\n          } // fade overlay to match distance of drag\n\n\n          overlayStyle.opacity = percentage;\n          overlayStyle.visibility = 'visible';\n        }\n\n        if (contentStyle) {\n          contentStyle[_this.props.position] = _this.state.sidebarWidth + 'px';\n        }\n      }\n\n      if (_this.props.position === 'top' || _this.props.position === 'bottom') {\n        sidebarStyle.transform = 'translateY(0%)';\n        sidebarStyle.WebkitTransform = 'translateY(0%)';\n\n        if (isTouching) {\n          var _percentage = _this.touchSidebarHeight() / _this.state.sidebarHeight; // slide open to what we dragged\n\n\n          if (_this.props.position === 'bottom') {\n            sidebarStyle.transform = 'translateY(' + (1 - _percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateY(' + (1 - _percentage) * 100 + '%)';\n          }\n\n          if (_this.props.position === 'top') {\n            sidebarStyle.transform = 'translateY(-' + (1 - _percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateY(-' + (1 - _percentage) * 100 + '%)';\n          } // fade overlay to match distance of drag\n\n\n          overlayStyle.opacity = _percentage;\n          overlayStyle.visibility = 'visible';\n        }\n\n        if (contentStyle) {\n          contentStyle[_this.props.position] = _this.state.sidebarHeight + 'px';\n        }\n      }\n    };\n\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: 0,\n      sidebarHeight: 0,\n      sidebarTop: 0,\n      dragHandleTop: 0,\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchStartY: null,\n      touchCurrentX: null,\n      touchCurrentY: null,\n      // if touch is supported by the browser\n      touchSupported: (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && 'ontouchstart' in window\n    };\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.saveSidebarSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      // filter out the updates when we're touching\n      if (!this.isTouching()) {\n        this.saveSidebarSize();\n      }\n    } // This logic helps us prevents the user from sliding the sidebar horizontally\n    // while scrolling the sidebar vertically. When a scroll event comes in, we're\n    // cancelling the ongoing gesture if it did not move horizontally much.\n    // True if the on going gesture X distance is less than the cancel distance\n    // calculate the sidebarWidth based on current touch info\n    // calculate the sidebarHeight based on current touch info\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _rootCls,\n          _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          style = _props.style,\n          prefixCls = _props.prefixCls,\n          position = _props.position,\n          transitions = _props.transitions,\n          touch = _props.touch,\n          enableDragHandle = _props.enableDragHandle,\n          sidebar = _props.sidebar,\n          children = _props.children,\n          docked = _props.docked,\n          open = _props.open;\n\n      var sidebarStyle = _extends({}, this.props.sidebarStyle);\n\n      var contentStyle = _extends({}, this.props.contentStyle);\n\n      var overlayStyle = _extends({}, this.props.overlayStyle);\n\n      var rootCls = (_rootCls = {}, _defineProperty(_rootCls, className, !!className), _defineProperty(_rootCls, prefixCls, true), _defineProperty(_rootCls, prefixCls + '-' + position, true), _rootCls);\n      var rootProps = {\n        style: style\n      };\n      var isTouching = this.isTouching();\n\n      if (isTouching) {\n        this.renderStyle({\n          sidebarStyle: sidebarStyle,\n          isTouching: true,\n          overlayStyle: overlayStyle\n        });\n      } else if (docked) {\n        if (this.state.sidebarWidth !== 0) {\n          rootCls[prefixCls + '-docked'] = true;\n          this.renderStyle({\n            sidebarStyle: sidebarStyle,\n            contentStyle: contentStyle\n          });\n        }\n      } else if (open) {\n        rootCls[prefixCls + '-open'] = true;\n        this.renderStyle({\n          sidebarStyle: sidebarStyle\n        });\n        overlayStyle.opacity = 1;\n        overlayStyle.visibility = 'visible';\n      }\n\n      if (isTouching || !transitions) {\n        sidebarStyle.transition = 'none';\n        sidebarStyle.WebkitTransition = 'none';\n        contentStyle.transition = 'none';\n        overlayStyle.transition = 'none';\n      }\n\n      var dragHandle = null;\n\n      if (this.state.touchSupported && touch) {\n        if (open) {\n          rootProps.onTouchStart = function (ev) {\n            _this2.notTouch = true;\n\n            _this2.onTouchStart(ev);\n          };\n\n          rootProps.onTouchMove = this.onTouchMove;\n          rootProps.onTouchEnd = this.onTouchEnd;\n          rootProps.onTouchCancel = this.onTouchEnd;\n          rootProps.onScroll = this.onScroll;\n        } else if (enableDragHandle) {\n          dragHandle = React.createElement('div', {\n            className: prefixCls + '-draghandle',\n            style: this.props.dragHandleStyle,\n            onTouchStart: this.onTouchStart,\n            onTouchMove: this.onTouchMove,\n            onTouchEnd: this.onTouchEnd,\n            onTouchCancel: this.onTouchEnd,\n            ref: 'dragHandle'\n          });\n        }\n      } // const evt = {};\n      // // FastClick use touchstart instead of click\n      // if (this.state.touchSupported) {\n      //   evt.onTouchStart = () => {\n      //     this.notTouch = true;\n      //     this.onOverlayClicked();\n      //   };\n      //   evt.onTouchEnd = () => {\n      //     this.notTouch = false;\n      //     this.setState({\n      //       touchIdentifier: null,\n      //     });\n      //   };\n      // } else {\n      //   evt.onClick = this.onOverlayClicked;\n      // }\n\n\n      return React.createElement('div', _extends({\n        className: classNames(rootCls)\n      }, rootProps), React.createElement('div', {\n        className: prefixCls + '-sidebar',\n        style: sidebarStyle,\n        ref: 'sidebar'\n      }, sidebar), React.createElement('div', {\n        className: prefixCls + '-overlay',\n        style: overlayStyle,\n        role: 'presentation',\n        ref: 'overlay',\n        onClick: this.onOverlayClicked\n      }), React.createElement('div', {\n        className: prefixCls + '-content',\n        style: contentStyle,\n        ref: 'content'\n      }, dragHandle, children));\n    }\n  }]);\n\n  return Drawer;\n}(React.Component);\n\nDrawer.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  // main content to render\n  children: PropTypes.node.isRequired,\n  // styles\n  // styles: PropTypes.shape({\n  //   dragHandle: PropTypes.object,\n  // }),\n  style: PropTypes.object,\n  sidebarStyle: PropTypes.object,\n  contentStyle: PropTypes.object,\n  overlayStyle: PropTypes.object,\n  dragHandleStyle: PropTypes.object,\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  enableDragHandle: PropTypes.bool,\n  // where to place the sidebar\n  position: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n  // callback called when the overlay is clicked\n  onOpenChange: PropTypes.func\n};\nDrawer.defaultProps = {\n  prefixCls: 'rmc-drawer',\n  sidebarStyle: {},\n  contentStyle: {},\n  overlayStyle: {},\n  dragHandleStyle: {},\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  enableDragHandle: true,\n  position: 'left',\n  dragToggleDistance: 30,\n  onOpenChange: function onOpenChange() {}\n};\nexport default Drawer;","map":{"version":3,"sources":["F:/1111111111/demo2/线下三阶段/三阶段小组项目/react/21cake/mycake/node_modules/rmc-drawer/es/Drawer.js"],"names":["_defineProperty","_extends","_typeof","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","ReactDOM","classNames","getOffset","ele","el","_x","_y","isNaN","offsetLeft","offsetTop","scrollLeft","scrollTop","offsetParent","top","left","CANCEL_DISTANCE_ON_SCROLL","Drawer","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onOverlayClicked","open","setTimeout","onOpenChange","overlayClicked","onTouchStart","ev","isTouching","touch","targetTouches","setState","touchIdentifier","notTouch","identifier","touchStartX","clientX","touchStartY","clientY","touchCurrentX","touchCurrentY","onTouchMove","ind","length","state","onTouchEnd","touchWidth","touchSidebarWidth","sidebarWidth","dragToggleDistance","touchHeight","touchSidebarHeight","sidebarHeight","onScroll","inCancelDistanceOnScroll","cancelDistanceOnScroll","position","Math","abs","saveSidebarSize","sidebar","findDOMNode","refs","width","offsetWidth","height","offsetHeight","sidebarTop","dragHandleTop","dragHandle","window","innerWidth","min","innerHeight","touchStartOffsetY","renderStyle","_ref","sidebarStyle","overlayStyle","contentStyle","transform","WebkitTransform","percentage","opacity","visibility","_percentage","touchSupported","key","value","componentDidMount","componentDidUpdate","render","_rootCls","_this2","_props","className","style","prefixCls","transitions","enableDragHandle","children","docked","rootCls","rootProps","transition","WebkitTransition","onTouchCancel","createElement","dragHandleStyle","ref","role","onClick","Component","propTypes","string","node","isRequired","object","bool","oneOf","number","func","defaultProps"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,0BAAP,MAAuC,iDAAvC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,MAAIC,EAAE,GAAGD,GAAT;AACA,MAAIE,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;;AACA,SAAOF,EAAE,IAAI,CAACG,KAAK,CAACH,EAAE,CAACI,UAAJ,CAAZ,IAA+B,CAACD,KAAK,CAACH,EAAE,CAACK,SAAJ,CAA5C,EAA4D;AAC1DJ,IAAAA,EAAE,IAAID,EAAE,CAACI,UAAH,GAAgBJ,EAAE,CAACM,UAAzB;AACAJ,IAAAA,EAAE,IAAIF,EAAE,CAACK,SAAH,GAAeL,EAAE,CAACO,SAAxB;AACAP,IAAAA,EAAE,GAAGA,EAAE,CAACQ,YAAR;AACD;;AACD,SAAO;AAAEC,IAAAA,GAAG,EAAEP,EAAP;AAAWQ,IAAAA,IAAI,EAAET;AAAjB,GAAP;AACD;;AAED,IAAIU,yBAAyB,GAAG,EAAhC;;AAEA,IAAIC,MAAM,GAAG,UAAUC,gBAAV,EAA4B;AACvCpB,EAAAA,SAAS,CAACmB,MAAD,EAASC,gBAAT,CAAT;;AAEA,WAASD,MAAT,CAAgBE,KAAhB,EAAuB;AACrBxB,IAAAA,eAAe,CAAC,IAAD,EAAOsB,MAAP,CAAf;;AAEA,QAAIG,KAAK,GAAGvB,0BAA0B,CAAC,IAAD,EAAO,CAACoB,MAAM,CAACI,SAAP,IAAoBC,MAAM,CAACC,cAAP,CAAsBN,MAAtB,CAArB,EAAoDO,IAApD,CAAyD,IAAzD,EAA+DL,KAA/D,CAAP,CAAtC;;AAEAC,IAAAA,KAAK,CAACK,gBAAN,GAAyB,YAAY;AACnC,UAAIL,KAAK,CAACD,KAAN,CAAYO,IAAhB,EAAsB;AACpB;AACAC,QAAAA,UAAU,CAAC,YAAY;AACrBP,UAAAA,KAAK,CAACD,KAAN,CAAYS,YAAZ,CAAyB,KAAzB,EAAgC;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAAhC;AACD,SAFS,EAEP,CAFO,CAAV;AAGD;AACF,KAPD;;AASAT,IAAAA,KAAK,CAACU,YAAN,GAAqB,UAAUC,EAAV,EAAc;AACjC;AACA,UAAI,CAACX,KAAK,CAACY,UAAN,EAAL,EAAyB;AACvB,YAAIC,KAAK,GAAGF,EAAE,CAACG,aAAH,CAAiB,CAAjB,CAAZ;;AACAd,QAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,UAAAA,eAAe,EAAE,CAAChB,KAAK,CAACiB,QAAP,GAAkBJ,KAAK,CAACK,UAAxB,GAAqC,IADzC;AAEbC,UAAAA,WAAW,EAAEN,KAAK,CAACO,OAFN;AAGbC,UAAAA,WAAW,EAAER,KAAK,CAACS,OAHN;AAIbC,UAAAA,aAAa,EAAEV,KAAK,CAACO,OAJR;AAKbI,UAAAA,aAAa,EAAEX,KAAK,CAACS;AALR,SAAf;AAOD;AACF,KAZD;;AAcAtB,IAAAA,KAAK,CAACyB,WAAN,GAAoB,UAAUd,EAAV,EAAc;AAChC;AACA,UAAIX,KAAK,CAACY,UAAN,EAAJ,EAAwB;AACtB,aAAK,IAAIc,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGf,EAAE,CAACG,aAAH,CAAiBa,MAAzC,EAAiDD,GAAG,EAApD,EAAwD;AACtD;AACA,cAAIf,EAAE,CAACG,aAAH,CAAiBY,GAAjB,EAAsBR,UAAtB,KAAqClB,KAAK,CAAC4B,KAAN,CAAYZ,eAArD,EAAsE;AACpEhB,YAAAA,KAAK,CAACe,QAAN,CAAe;AACbQ,cAAAA,aAAa,EAAEZ,EAAE,CAACG,aAAH,CAAiBY,GAAjB,EAAsBN,OADxB;AAEbI,cAAAA,aAAa,EAAEb,EAAE,CAACG,aAAH,CAAiBY,GAAjB,EAAsBJ;AAFxB,aAAf;;AAIA;AACD;AACF;AACF;AACF,KAdD;;AAgBAtB,IAAAA,KAAK,CAAC6B,UAAN,GAAmB,YAAY;AAC7B7B,MAAAA,KAAK,CAACiB,QAAN,GAAiB,KAAjB;;AACA,UAAIjB,KAAK,CAACY,UAAN,EAAJ,EAAwB;AACtB;AACA,YAAIkB,UAAU,GAAG9B,KAAK,CAAC+B,iBAAN,EAAjB;;AAEA,YAAI/B,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoBwB,UAAU,GAAG9B,KAAK,CAAC4B,KAAN,CAAYI,YAAZ,GAA2BhC,KAAK,CAACD,KAAN,CAAYkC,kBAAxE,IAA8F,CAACjC,KAAK,CAACD,KAAN,CAAYO,IAAb,IAAqBwB,UAAU,GAAG9B,KAAK,CAACD,KAAN,CAAYkC,kBAAhJ,EAAoK;AAClKjC,UAAAA,KAAK,CAACD,KAAN,CAAYS,YAAZ,CAAyB,CAACR,KAAK,CAACD,KAAN,CAAYO,IAAtC;AACD;;AAED,YAAI4B,WAAW,GAAGlC,KAAK,CAACmC,kBAAN,EAAlB;;AAEA,YAAInC,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoB4B,WAAW,GAAGlC,KAAK,CAAC4B,KAAN,CAAYQ,aAAZ,GAA4BpC,KAAK,CAACD,KAAN,CAAYkC,kBAA1E,IAAgG,CAACjC,KAAK,CAACD,KAAN,CAAYO,IAAb,IAAqB4B,WAAW,GAAGlC,KAAK,CAACD,KAAN,CAAYkC,kBAAnJ,EAAuK;AACrKjC,UAAAA,KAAK,CAACD,KAAN,CAAYS,YAAZ,CAAyB,CAACR,KAAK,CAACD,KAAN,CAAYO,IAAtC;AACD;;AAEDN,QAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,UAAAA,eAAe,EAAE,IADJ;AAEbG,UAAAA,WAAW,EAAE,IAFA;AAGbE,UAAAA,WAAW,EAAE,IAHA;AAIbE,UAAAA,aAAa,EAAE,IAJF;AAKbC,UAAAA,aAAa,EAAE;AALF,SAAf;AAOD;AACF,KAxBD;;AA0BAxB,IAAAA,KAAK,CAACqC,QAAN,GAAiB,YAAY;AAC3B,UAAIrC,KAAK,CAACY,UAAN,MAAsBZ,KAAK,CAACsC,wBAAN,EAA1B,EAA4D;AAC1DtC,QAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,UAAAA,eAAe,EAAE,IADJ;AAEbG,UAAAA,WAAW,EAAE,IAFA;AAGbE,UAAAA,WAAW,EAAE,IAHA;AAIbE,UAAAA,aAAa,EAAE,IAJF;AAKbC,UAAAA,aAAa,EAAE;AALF,SAAf;AAOD;AACF,KAVD;;AAYAxB,IAAAA,KAAK,CAACsC,wBAAN,GAAiC,YAAY;AAC3C,UAAIC,sBAAsB,GAAG,KAAK,CAAlC;;AACA,cAAQvC,KAAK,CAACD,KAAN,CAAYyC,QAApB;AACE,aAAK,OAAL;AACED,UAAAA,sBAAsB,GAAGE,IAAI,CAACC,GAAL,CAAS1C,KAAK,CAAC4B,KAAN,CAAYL,aAAZ,GAA4BvB,KAAK,CAAC4B,KAAN,CAAYT,WAAjD,IAAgEvB,yBAAzF;AACA;;AACF,aAAK,QAAL;AACE2C,UAAAA,sBAAsB,GAAGE,IAAI,CAACC,GAAL,CAAS1C,KAAK,CAAC4B,KAAN,CAAYJ,aAAZ,GAA4BxB,KAAK,CAAC4B,KAAN,CAAYP,WAAjD,IAAgEzB,yBAAzF;AACA;;AACF,aAAK,KAAL;AACE2C,UAAAA,sBAAsB,GAAGE,IAAI,CAACC,GAAL,CAAS1C,KAAK,CAAC4B,KAAN,CAAYP,WAAZ,GAA0BrB,KAAK,CAAC4B,KAAN,CAAYJ,aAA/C,IAAgE5B,yBAAzF;AACA;;AACF,aAAK,MAAL;AACA;AACE2C,UAAAA,sBAAsB,GAAGE,IAAI,CAACC,GAAL,CAAS1C,KAAK,CAAC4B,KAAN,CAAYT,WAAZ,GAA0BnB,KAAK,CAAC4B,KAAN,CAAYL,aAA/C,IAAgE3B,yBAAzF;AAZJ;;AAcA,aAAO2C,sBAAP;AACD,KAjBD;;AAmBAvC,IAAAA,KAAK,CAACY,UAAN,GAAmB,YAAY;AAC7B,aAAOZ,KAAK,CAAC4B,KAAN,CAAYZ,eAAZ,KAAgC,IAAvC;AACD,KAFD;;AAIAhB,IAAAA,KAAK,CAAC2C,eAAN,GAAwB,YAAY;AAClC,UAAIC,OAAO,GAAG/D,QAAQ,CAACgE,WAAT,CAAqB7C,KAAK,CAAC8C,IAAN,CAAWF,OAAhC,CAAd;AACA,UAAIG,KAAK,GAAGH,OAAO,CAACI,WAApB;AACA,UAAIC,MAAM,GAAGL,OAAO,CAACM,YAArB;AACA,UAAIC,UAAU,GAAGpE,SAAS,CAACF,QAAQ,CAACgE,WAAT,CAAqB7C,KAAK,CAAC8C,IAAN,CAAWF,OAAhC,CAAD,CAAT,CAAoDlD,GAArE;AACA,UAAI0D,aAAa,GAAGrE,SAAS,CAACF,QAAQ,CAACgE,WAAT,CAAqB7C,KAAK,CAAC8C,IAAN,CAAWO,UAAhC,CAAD,CAAT,CAAuD3D,GAA3E;;AAEA,UAAIqD,KAAK,KAAK/C,KAAK,CAAC4B,KAAN,CAAYI,YAA1B,EAAwC;AACtChC,QAAAA,KAAK,CAACe,QAAN,CAAe;AAAEiB,UAAAA,YAAY,EAAEe;AAAhB,SAAf;AACD;;AACD,UAAIE,MAAM,KAAKjD,KAAK,CAAC4B,KAAN,CAAYQ,aAA3B,EAA0C;AACxCpC,QAAAA,KAAK,CAACe,QAAN,CAAe;AAAEqB,UAAAA,aAAa,EAAEa;AAAjB,SAAf;AACD;;AACD,UAAIE,UAAU,KAAKnD,KAAK,CAAC4B,KAAN,CAAYuB,UAA/B,EAA2C;AACzCnD,QAAAA,KAAK,CAACe,QAAN,CAAe;AAAEoC,UAAAA,UAAU,EAAEA;AAAd,SAAf;AACD;;AACD,UAAIC,aAAa,KAAKpD,KAAK,CAAC4B,KAAN,CAAYwB,aAAlC,EAAiD;AAC/CpD,QAAAA,KAAK,CAACe,QAAN,CAAe;AAAEqC,UAAAA,aAAa,EAAEA;AAAjB,SAAf;AACD;AACF,KAnBD;;AAqBApD,IAAAA,KAAK,CAAC+B,iBAAN,GAA0B,YAAY;AACpC;AACA;AACA;AACA,UAAI/B,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,OAA7B,EAAsC;AACpC,YAAIxC,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoBgD,MAAM,CAACC,UAAP,GAAoBvD,KAAK,CAAC4B,KAAN,CAAYT,WAAhC,GAA8CnB,KAAK,CAAC4B,KAAN,CAAYI,YAAlF,EAAgG;AAC9F,cAAIhC,KAAK,CAAC4B,KAAN,CAAYL,aAAZ,GAA4BvB,KAAK,CAAC4B,KAAN,CAAYT,WAA5C,EAAyD;AACvD,mBAAOnB,KAAK,CAAC4B,KAAN,CAAYI,YAAZ,GAA2BhC,KAAK,CAAC4B,KAAN,CAAYT,WAAvC,GAAqDnB,KAAK,CAAC4B,KAAN,CAAYL,aAAxE;AACD;;AACD,iBAAOvB,KAAK,CAAC4B,KAAN,CAAYI,YAAnB;AACD;;AACD,eAAOS,IAAI,CAACe,GAAL,CAASF,MAAM,CAACC,UAAP,GAAoBvD,KAAK,CAAC4B,KAAN,CAAYL,aAAzC,EAAwDvB,KAAK,CAAC4B,KAAN,CAAYI,YAApE,CAAP;AACD;;AAED,UAAIhC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,MAA7B,EAAqC;AACnC,YAAIxC,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoBN,KAAK,CAAC4B,KAAN,CAAYT,WAAZ,GAA0BnB,KAAK,CAAC4B,KAAN,CAAYI,YAA9D,EAA4E;AAC1E,cAAIhC,KAAK,CAAC4B,KAAN,CAAYL,aAAZ,GAA4BvB,KAAK,CAAC4B,KAAN,CAAYT,WAA5C,EAAyD;AACvD,mBAAOnB,KAAK,CAAC4B,KAAN,CAAYI,YAAnB;AACD;;AACD,iBAAOhC,KAAK,CAAC4B,KAAN,CAAYI,YAAZ,GAA2BhC,KAAK,CAAC4B,KAAN,CAAYT,WAAvC,GAAqDnB,KAAK,CAAC4B,KAAN,CAAYL,aAAxE;AACD;;AACD,eAAOkB,IAAI,CAACe,GAAL,CAASxD,KAAK,CAAC4B,KAAN,CAAYL,aAArB,EAAoCvB,KAAK,CAAC4B,KAAN,CAAYI,YAAhD,CAAP;AACD;AACF,KAvBD;;AAyBAhC,IAAAA,KAAK,CAACmC,kBAAN,GAA2B,YAAY;AACrC;AACA;AACA;AACA,UAAInC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,QAA7B,EAAuC;AACrC,YAAIxC,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoBgD,MAAM,CAACG,WAAP,GAAqBzD,KAAK,CAAC4B,KAAN,CAAYP,WAAjC,GAA+CrB,KAAK,CAAC4B,KAAN,CAAYQ,aAAnF,EAAkG;AAChG,cAAIpC,KAAK,CAAC4B,KAAN,CAAYJ,aAAZ,GAA4BxB,KAAK,CAAC4B,KAAN,CAAYP,WAA5C,EAAyD;AACvD,mBAAOrB,KAAK,CAAC4B,KAAN,CAAYQ,aAAZ,GAA4BpC,KAAK,CAAC4B,KAAN,CAAYP,WAAxC,GAAsDrB,KAAK,CAAC4B,KAAN,CAAYJ,aAAzE;AACD;;AACD,iBAAOxB,KAAK,CAAC4B,KAAN,CAAYQ,aAAnB;AACD;;AACD,eAAOK,IAAI,CAACe,GAAL,CAASF,MAAM,CAACG,WAAP,GAAqBzD,KAAK,CAAC4B,KAAN,CAAYJ,aAA1C,EAAyDxB,KAAK,CAAC4B,KAAN,CAAYQ,aAArE,CAAP;AACD;;AAED,UAAIpC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,KAA7B,EAAoC;AAClC,YAAIkB,iBAAiB,GAAG1D,KAAK,CAAC4B,KAAN,CAAYP,WAAZ,GAA0BrB,KAAK,CAAC4B,KAAN,CAAYuB,UAA9D;;AACA,YAAInD,KAAK,CAACD,KAAN,CAAYO,IAAZ,IAAoBoD,iBAAiB,GAAG1D,KAAK,CAAC4B,KAAN,CAAYQ,aAAxD,EAAuE;AACrE,cAAIpC,KAAK,CAAC4B,KAAN,CAAYJ,aAAZ,GAA4BxB,KAAK,CAAC4B,KAAN,CAAYP,WAA5C,EAAyD;AACvD,mBAAOrB,KAAK,CAAC4B,KAAN,CAAYQ,aAAnB;AACD;;AACD,iBAAOpC,KAAK,CAAC4B,KAAN,CAAYQ,aAAZ,GAA4BpC,KAAK,CAAC4B,KAAN,CAAYP,WAAxC,GAAsDrB,KAAK,CAAC4B,KAAN,CAAYJ,aAAzE;AACD;;AACD,eAAOiB,IAAI,CAACe,GAAL,CAASxD,KAAK,CAAC4B,KAAN,CAAYJ,aAAZ,GAA4BxB,KAAK,CAAC4B,KAAN,CAAYwB,aAAjD,EAAgEpD,KAAK,CAAC4B,KAAN,CAAYQ,aAA5E,CAAP;AACD;AACF,KAxBD;;AA0BApC,IAAAA,KAAK,CAAC2D,WAAN,GAAoB,UAAUC,IAAV,EAAgB;AAClC,UAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;AAAA,UACIjD,UAAU,GAAGgD,IAAI,CAAChD,UADtB;AAAA,UAEIkD,YAAY,GAAGF,IAAI,CAACE,YAFxB;AAAA,UAGIC,YAAY,GAAGH,IAAI,CAACG,YAHxB;;AAKA,UAAI/D,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,OAAzB,IAAoCxC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,MAAjE,EAAyE;AACvEqB,QAAAA,YAAY,CAACG,SAAb,GAAyB,gBAAzB;AACAH,QAAAA,YAAY,CAACI,eAAb,GAA+B,gBAA/B;;AACA,YAAIrD,UAAJ,EAAgB;AACd,cAAIsD,UAAU,GAAGlE,KAAK,CAAC+B,iBAAN,KAA4B/B,KAAK,CAAC4B,KAAN,CAAYI,YAAzD,CADc,CAEd;;;AACA,cAAIhC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,OAA7B,EAAsC;AACpCqB,YAAAA,YAAY,CAACG,SAAb,GAAyB,gBAAgB,CAAC,IAAIE,UAAL,IAAmB,GAAnC,GAAyC,IAAlE;AACAL,YAAAA,YAAY,CAACI,eAAb,GAA+B,gBAAgB,CAAC,IAAIC,UAAL,IAAmB,GAAnC,GAAyC,IAAxE;AACD;;AACD,cAAIlE,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,MAA7B,EAAqC;AACnCqB,YAAAA,YAAY,CAACG,SAAb,GAAyB,iBAAiB,CAAC,IAAIE,UAAL,IAAmB,GAApC,GAA0C,IAAnE;AACAL,YAAAA,YAAY,CAACI,eAAb,GAA+B,iBAAiB,CAAC,IAAIC,UAAL,IAAmB,GAApC,GAA0C,IAAzE;AACD,WAVa,CAWd;;;AACAJ,UAAAA,YAAY,CAACK,OAAb,GAAuBD,UAAvB;AACAJ,UAAAA,YAAY,CAACM,UAAb,GAA0B,SAA1B;AACD;;AACD,YAAIL,YAAJ,EAAkB;AAChBA,UAAAA,YAAY,CAAC/D,KAAK,CAACD,KAAN,CAAYyC,QAAb,CAAZ,GAAqCxC,KAAK,CAAC4B,KAAN,CAAYI,YAAZ,GAA2B,IAAhE;AACD;AACF;;AACD,UAAIhC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,KAAzB,IAAkCxC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,QAA/D,EAAyE;AACvEqB,QAAAA,YAAY,CAACG,SAAb,GAAyB,gBAAzB;AACAH,QAAAA,YAAY,CAACI,eAAb,GAA+B,gBAA/B;;AACA,YAAIrD,UAAJ,EAAgB;AACd,cAAIyD,WAAW,GAAGrE,KAAK,CAACmC,kBAAN,KAA6BnC,KAAK,CAAC4B,KAAN,CAAYQ,aAA3D,CADc,CAEd;;;AACA,cAAIpC,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,QAA7B,EAAuC;AACrCqB,YAAAA,YAAY,CAACG,SAAb,GAAyB,gBAAgB,CAAC,IAAIK,WAAL,IAAoB,GAApC,GAA0C,IAAnE;AACAR,YAAAA,YAAY,CAACI,eAAb,GAA+B,gBAAgB,CAAC,IAAII,WAAL,IAAoB,GAApC,GAA0C,IAAzE;AACD;;AACD,cAAIrE,KAAK,CAACD,KAAN,CAAYyC,QAAZ,KAAyB,KAA7B,EAAoC;AAClCqB,YAAAA,YAAY,CAACG,SAAb,GAAyB,iBAAiB,CAAC,IAAIK,WAAL,IAAoB,GAArC,GAA2C,IAApE;AACAR,YAAAA,YAAY,CAACI,eAAb,GAA+B,iBAAiB,CAAC,IAAII,WAAL,IAAoB,GAArC,GAA2C,IAA1E;AACD,WAVa,CAWd;;;AACAP,UAAAA,YAAY,CAACK,OAAb,GAAuBE,WAAvB;AACAP,UAAAA,YAAY,CAACM,UAAb,GAA0B,SAA1B;AACD;;AACD,YAAIL,YAAJ,EAAkB;AAChBA,UAAAA,YAAY,CAAC/D,KAAK,CAACD,KAAN,CAAYyC,QAAb,CAAZ,GAAqCxC,KAAK,CAAC4B,KAAN,CAAYQ,aAAZ,GAA4B,IAAjE;AACD;AACF;AACF,KAlDD;;AAoDApC,IAAAA,KAAK,CAAC4B,KAAN,GAAc;AACZ;AACAI,MAAAA,YAAY,EAAE,CAFF;AAGZI,MAAAA,aAAa,EAAE,CAHH;AAIZe,MAAAA,UAAU,EAAE,CAJA;AAKZC,MAAAA,aAAa,EAAE,CALH;AAOZ;AACApC,MAAAA,eAAe,EAAE,IARL;AASZG,MAAAA,WAAW,EAAE,IATD;AAUZE,MAAAA,WAAW,EAAE,IAVD;AAWZE,MAAAA,aAAa,EAAE,IAXH;AAYZC,MAAAA,aAAa,EAAE,IAZH;AAcZ;AACA8C,MAAAA,cAAc,EAAE,CAAC,OAAOhB,MAAP,KAAkB,WAAlB,GAAgC,WAAhC,GAA8ChF,OAAO,CAACgF,MAAD,CAAtD,MAAoE,QAApE,IAAgF,kBAAkBA;AAftG,KAAd;AAiBA,WAAOtD,KAAP;AACD;;AAEDxB,EAAAA,YAAY,CAACqB,MAAD,EAAS,CAAC;AACpB0E,IAAAA,GAAG,EAAE,mBADe;AAEpBC,IAAAA,KAAK,EAAE,SAASC,iBAAT,GAA6B;AAClC,WAAK9B,eAAL;AACD;AAJmB,GAAD,EAKlB;AACD4B,IAAAA,GAAG,EAAE,oBADJ;AAEDC,IAAAA,KAAK,EAAE,SAASE,kBAAT,GAA8B;AACnC;AACA,UAAI,CAAC,KAAK9D,UAAL,EAAL,EAAwB;AACtB,aAAK+B,eAAL;AACD;AACF,KAPA,CASD;AACA;AACA;AAGA;AAGA;AAEA;;AAnBC,GALkB,EA0BlB;AACD4B,IAAAA,GAAG,EAAE,QADJ;AAEDC,IAAAA,KAAK,EAAE,SAASG,MAAT,GAAkB;AACvB,UAAIC,QAAJ;AAAA,UACIC,MAAM,GAAG,IADb;;AAGA,UAAIC,MAAM,GAAG,KAAK/E,KAAlB;AAAA,UACIgF,SAAS,GAAGD,MAAM,CAACC,SADvB;AAAA,UAEIC,KAAK,GAAGF,MAAM,CAACE,KAFnB;AAAA,UAGIC,SAAS,GAAGH,MAAM,CAACG,SAHvB;AAAA,UAIIzC,QAAQ,GAAGsC,MAAM,CAACtC,QAJtB;AAAA,UAKI0C,WAAW,GAAGJ,MAAM,CAACI,WALzB;AAAA,UAMIrE,KAAK,GAAGiE,MAAM,CAACjE,KANnB;AAAA,UAOIsE,gBAAgB,GAAGL,MAAM,CAACK,gBAP9B;AAAA,UAQIvC,OAAO,GAAGkC,MAAM,CAAClC,OARrB;AAAA,UASIwC,QAAQ,GAAGN,MAAM,CAACM,QATtB;AAAA,UAUIC,MAAM,GAAGP,MAAM,CAACO,MAVpB;AAAA,UAWI/E,IAAI,GAAGwE,MAAM,CAACxE,IAXlB;;AAcA,UAAIuD,YAAY,GAAGxF,QAAQ,CAAC,EAAD,EAAK,KAAK0B,KAAL,CAAW8D,YAAhB,CAA3B;;AACA,UAAIE,YAAY,GAAG1F,QAAQ,CAAC,EAAD,EAAK,KAAK0B,KAAL,CAAWgE,YAAhB,CAA3B;;AACA,UAAID,YAAY,GAAGzF,QAAQ,CAAC,EAAD,EAAK,KAAK0B,KAAL,CAAW+D,YAAhB,CAA3B;;AAEA,UAAIwB,OAAO,IAAIV,QAAQ,GAAG,EAAX,EAAexG,eAAe,CAACwG,QAAD,EAAWG,SAAX,EAAsB,CAAC,CAACA,SAAxB,CAA9B,EAAkE3G,eAAe,CAACwG,QAAD,EAAWK,SAAX,EAAsB,IAAtB,CAAjF,EAA8G7G,eAAe,CAACwG,QAAD,EAAWK,SAAS,GAAG,GAAZ,GAAkBzC,QAA7B,EAAuC,IAAvC,CAA7H,EAA2KoC,QAA/K,CAAX;AAEA,UAAIW,SAAS,GAAG;AAAEP,QAAAA,KAAK,EAAEA;AAAT,OAAhB;AACA,UAAIpE,UAAU,GAAG,KAAKA,UAAL,EAAjB;;AAEA,UAAIA,UAAJ,EAAgB;AACd,aAAK+C,WAAL,CAAiB;AAAEE,UAAAA,YAAY,EAAEA,YAAhB;AAA8BjD,UAAAA,UAAU,EAAE,IAA1C;AAAgDkD,UAAAA,YAAY,EAAEA;AAA9D,SAAjB;AACD,OAFD,MAEO,IAAIuB,MAAJ,EAAY;AACjB,YAAI,KAAKzD,KAAL,CAAWI,YAAX,KAA4B,CAAhC,EAAmC;AACjCsD,UAAAA,OAAO,CAACL,SAAS,GAAG,SAAb,CAAP,GAAiC,IAAjC;AACA,eAAKtB,WAAL,CAAiB;AAAEE,YAAAA,YAAY,EAAEA,YAAhB;AAA8BE,YAAAA,YAAY,EAAEA;AAA5C,WAAjB;AACD;AACF,OALM,MAKA,IAAIzD,IAAJ,EAAU;AACfgF,QAAAA,OAAO,CAACL,SAAS,GAAG,OAAb,CAAP,GAA+B,IAA/B;AACA,aAAKtB,WAAL,CAAiB;AAAEE,UAAAA,YAAY,EAAEA;AAAhB,SAAjB;AACAC,QAAAA,YAAY,CAACK,OAAb,GAAuB,CAAvB;AACAL,QAAAA,YAAY,CAACM,UAAb,GAA0B,SAA1B;AACD;;AAED,UAAIxD,UAAU,IAAI,CAACsE,WAAnB,EAAgC;AAC9BrB,QAAAA,YAAY,CAAC2B,UAAb,GAA0B,MAA1B;AACA3B,QAAAA,YAAY,CAAC4B,gBAAb,GAAgC,MAAhC;AACA1B,QAAAA,YAAY,CAACyB,UAAb,GAA0B,MAA1B;AACA1B,QAAAA,YAAY,CAAC0B,UAAb,GAA0B,MAA1B;AACD;;AAED,UAAInC,UAAU,GAAG,IAAjB;;AAEA,UAAI,KAAKzB,KAAL,CAAW0C,cAAX,IAA6BzD,KAAjC,EAAwC;AACtC,YAAIP,IAAJ,EAAU;AACRiF,UAAAA,SAAS,CAAC7E,YAAV,GAAyB,UAAUC,EAAV,EAAc;AACrCkE,YAAAA,MAAM,CAAC5D,QAAP,GAAkB,IAAlB;;AACA4D,YAAAA,MAAM,CAACnE,YAAP,CAAoBC,EAApB;AACD,WAHD;;AAIA4E,UAAAA,SAAS,CAAC9D,WAAV,GAAwB,KAAKA,WAA7B;AACA8D,UAAAA,SAAS,CAAC1D,UAAV,GAAuB,KAAKA,UAA5B;AACA0D,UAAAA,SAAS,CAACG,aAAV,GAA0B,KAAK7D,UAA/B;AACA0D,UAAAA,SAAS,CAAClD,QAAV,GAAqB,KAAKA,QAA1B;AACD,SATD,MASO,IAAI8C,gBAAJ,EAAsB;AAC3B9B,UAAAA,UAAU,GAAG1E,KAAK,CAACgH,aAAN,CAAoB,KAApB,EAA2B;AAAEZ,YAAAA,SAAS,EAAEE,SAAS,GAAG,aAAzB;AAAwCD,YAAAA,KAAK,EAAE,KAAKjF,KAAL,CAAW6F,eAA1D;AACtClF,YAAAA,YAAY,EAAE,KAAKA,YADmB;AACLe,YAAAA,WAAW,EAAE,KAAKA,WADb;AAEtCI,YAAAA,UAAU,EAAE,KAAKA,UAFqB;AAET6D,YAAAA,aAAa,EAAE,KAAK7D,UAFX;AAGtCgE,YAAAA,GAAG,EAAE;AAHiC,WAA3B,CAAb;AAKD;AACF,OAnEsB,CAqEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,aAAOlH,KAAK,CAACgH,aAAN,CACL,KADK,EAELtH,QAAQ,CAAC;AAAE0G,QAAAA,SAAS,EAAEjG,UAAU,CAACwG,OAAD;AAAvB,OAAD,EAAqCC,SAArC,CAFH,EAGL5G,KAAK,CAACgH,aAAN,CACE,KADF,EAEE;AAAEZ,QAAAA,SAAS,EAAEE,SAAS,GAAG,UAAzB;AAAqCD,QAAAA,KAAK,EAAEnB,YAA5C;AACEgC,QAAAA,GAAG,EAAE;AADP,OAFF,EAKEjD,OALF,CAHK,EAULjE,KAAK,CAACgH,aAAN,CAAoB,KAApB,EAA2B;AAAEZ,QAAAA,SAAS,EAAEE,SAAS,GAAG,UAAzB;AACzBD,QAAAA,KAAK,EAAElB,YADkB;AAEzBgC,QAAAA,IAAI,EAAE,cAFmB;AAGzBD,QAAAA,GAAG,EAAE,SAHoB;AAIzBE,QAAAA,OAAO,EAAE,KAAK1F;AAJW,OAA3B,CAVK,EAgBL1B,KAAK,CAACgH,aAAN,CACE,KADF,EAEE;AAAEZ,QAAAA,SAAS,EAAEE,SAAS,GAAG,UAAzB;AAAqCD,QAAAA,KAAK,EAAEjB,YAA5C;AACE8B,QAAAA,GAAG,EAAE;AADP,OAFF,EAKExC,UALF,EAME+B,QANF,CAhBK,CAAP;AAyBD;AAjHA,GA1BkB,CAAT,CAAZ;;AA8IA,SAAOvF,MAAP;AACD,CA3YY,CA2YXlB,KAAK,CAACqH,SA3YK,CAAb;;AA6YAnG,MAAM,CAACoG,SAAP,GAAmB;AACjBhB,EAAAA,SAAS,EAAErG,SAAS,CAACsH,MADJ;AAEjBnB,EAAAA,SAAS,EAAEnG,SAAS,CAACsH,MAFJ;AAGjB;AACAd,EAAAA,QAAQ,EAAExG,SAAS,CAACuH,IAAV,CAAeC,UAJR;AAMjB;AACA;AACA;AACA;AACApB,EAAAA,KAAK,EAAEpG,SAAS,CAACyH,MAVA;AAWjBxC,EAAAA,YAAY,EAAEjF,SAAS,CAACyH,MAXP;AAYjBtC,EAAAA,YAAY,EAAEnF,SAAS,CAACyH,MAZP;AAajBvC,EAAAA,YAAY,EAAElF,SAAS,CAACyH,MAbP;AAcjBT,EAAAA,eAAe,EAAEhH,SAAS,CAACyH,MAdV;AAgBjB;AACAzD,EAAAA,OAAO,EAAEhE,SAAS,CAACuH,IAAV,CAAeC,UAjBP;AAmBjB;AACAf,EAAAA,MAAM,EAAEzG,SAAS,CAAC0H,IApBD;AAsBjB;AACAhG,EAAAA,IAAI,EAAE1B,SAAS,CAAC0H,IAvBC;AAyBjB;AACApB,EAAAA,WAAW,EAAEtG,SAAS,CAAC0H,IA1BN;AA4BjB;AACAzF,EAAAA,KAAK,EAAEjC,SAAS,CAAC0H,IA7BA;AA8BjBnB,EAAAA,gBAAgB,EAAEvG,SAAS,CAAC0H,IA9BX;AAgCjB;AACA9D,EAAAA,QAAQ,EAAE5D,SAAS,CAAC2H,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,QAAzB,CAAhB,CAjCO;AAmCjB;AACAtE,EAAAA,kBAAkB,EAAErD,SAAS,CAAC4H,MApCb;AAsCjB;AACAhG,EAAAA,YAAY,EAAE5B,SAAS,CAAC6H;AAvCP,CAAnB;AAyCA5G,MAAM,CAAC6G,YAAP,GAAsB;AACpBzB,EAAAA,SAAS,EAAE,YADS;AAEpBpB,EAAAA,YAAY,EAAE,EAFM;AAGpBE,EAAAA,YAAY,EAAE,EAHM;AAIpBD,EAAAA,YAAY,EAAE,EAJM;AAKpB8B,EAAAA,eAAe,EAAE,EALG;AAMpBP,EAAAA,MAAM,EAAE,KANY;AAOpB/E,EAAAA,IAAI,EAAE,KAPc;AAQpB4E,EAAAA,WAAW,EAAE,IARO;AASpBrE,EAAAA,KAAK,EAAE,IATa;AAUpBsE,EAAAA,gBAAgB,EAAE,IAVE;AAWpB3C,EAAAA,QAAQ,EAAE,MAXU;AAYpBP,EAAAA,kBAAkB,EAAE,EAZA;AAapBzB,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB,CAAE;AAbpB,CAAtB;AAeA,eAAeX,MAAf","sourcesContent":["import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nfunction getOffset(ele) {\n  var el = ele;\n  var _x = 0;\n  var _y = 0;\n  while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\n    _x += el.offsetLeft - el.scrollLeft;\n    _y += el.offsetTop - el.scrollTop;\n    el = el.offsetParent;\n  }\n  return { top: _y, left: _x };\n}\n\nvar CANCEL_DISTANCE_ON_SCROLL = 20;\n\nvar Drawer = function (_React$Component) {\n  _inherits(Drawer, _React$Component);\n\n  function Drawer(props) {\n    _classCallCheck(this, Drawer);\n\n    var _this = _possibleConstructorReturn(this, (Drawer.__proto__ || Object.getPrototypeOf(Drawer)).call(this, props));\n\n    _this.onOverlayClicked = function () {\n      if (_this.props.open) {\n        // see https://github.com/react-component/drawer/issues/9\n        setTimeout(function () {\n          _this.props.onOpenChange(false, { overlayClicked: true });\n        }, 0);\n      }\n    };\n\n    _this.onTouchStart = function (ev) {\n      // filter out if a user starts swiping with a second finger\n      if (!_this.isTouching()) {\n        var touch = ev.targetTouches[0];\n        _this.setState({\n          touchIdentifier: !_this.notTouch ? touch.identifier : null,\n          touchStartX: touch.clientX,\n          touchStartY: touch.clientY,\n          touchCurrentX: touch.clientX,\n          touchCurrentY: touch.clientY\n        });\n      }\n    };\n\n    _this.onTouchMove = function (ev) {\n      // ev.preventDefault(); // cannot touchmove with FastClick\n      if (_this.isTouching()) {\n        for (var ind = 0; ind < ev.targetTouches.length; ind++) {\n          // we only care about the finger that we are tracking\n          if (ev.targetTouches[ind].identifier === _this.state.touchIdentifier) {\n            _this.setState({\n              touchCurrentX: ev.targetTouches[ind].clientX,\n              touchCurrentY: ev.targetTouches[ind].clientY\n            });\n            break;\n          }\n        }\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      _this.notTouch = false;\n      if (_this.isTouching()) {\n        // trigger a change to open if sidebar has been dragged beyond dragToggleDistance\n        var touchWidth = _this.touchSidebarWidth();\n\n        if (_this.props.open && touchWidth < _this.state.sidebarWidth - _this.props.dragToggleDistance || !_this.props.open && touchWidth > _this.props.dragToggleDistance) {\n          _this.props.onOpenChange(!_this.props.open);\n        }\n\n        var touchHeight = _this.touchSidebarHeight();\n\n        if (_this.props.open && touchHeight < _this.state.sidebarHeight - _this.props.dragToggleDistance || !_this.props.open && touchHeight > _this.props.dragToggleDistance) {\n          _this.props.onOpenChange(!_this.props.open);\n        }\n\n        _this.setState({\n          touchIdentifier: null,\n          touchStartX: null,\n          touchStartY: null,\n          touchCurrentX: null,\n          touchCurrentY: null\n        });\n      }\n    };\n\n    _this.onScroll = function () {\n      if (_this.isTouching() && _this.inCancelDistanceOnScroll()) {\n        _this.setState({\n          touchIdentifier: null,\n          touchStartX: null,\n          touchStartY: null,\n          touchCurrentX: null,\n          touchCurrentY: null\n        });\n      }\n    };\n\n    _this.inCancelDistanceOnScroll = function () {\n      var cancelDistanceOnScroll = void 0;\n      switch (_this.props.position) {\n        case 'right':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchCurrentX - _this.state.touchStartX) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n        case 'bottom':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchCurrentY - _this.state.touchStartY) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n        case 'top':\n          cancelDistanceOnScroll = Math.abs(_this.state.touchStartY - _this.state.touchCurrentY) < CANCEL_DISTANCE_ON_SCROLL;\n          break;\n        case 'left':\n        default:\n          cancelDistanceOnScroll = Math.abs(_this.state.touchStartX - _this.state.touchCurrentX) < CANCEL_DISTANCE_ON_SCROLL;\n      }\n      return cancelDistanceOnScroll;\n    };\n\n    _this.isTouching = function () {\n      return _this.state.touchIdentifier !== null;\n    };\n\n    _this.saveSidebarSize = function () {\n      var sidebar = ReactDOM.findDOMNode(_this.refs.sidebar);\n      var width = sidebar.offsetWidth;\n      var height = sidebar.offsetHeight;\n      var sidebarTop = getOffset(ReactDOM.findDOMNode(_this.refs.sidebar)).top;\n      var dragHandleTop = getOffset(ReactDOM.findDOMNode(_this.refs.dragHandle)).top;\n\n      if (width !== _this.state.sidebarWidth) {\n        _this.setState({ sidebarWidth: width });\n      }\n      if (height !== _this.state.sidebarHeight) {\n        _this.setState({ sidebarHeight: height });\n      }\n      if (sidebarTop !== _this.state.sidebarTop) {\n        _this.setState({ sidebarTop: sidebarTop });\n      }\n      if (dragHandleTop !== _this.state.dragHandleTop) {\n        _this.setState({ dragHandleTop: dragHandleTop });\n      }\n    };\n\n    _this.touchSidebarWidth = function () {\n      // if the sidebar is open and start point of drag is inside the sidebar\n      // we will only drag the distance they moved their finger\n      // otherwise we will move the sidebar to be below the finger.\n      if (_this.props.position === 'right') {\n        if (_this.props.open && window.innerWidth - _this.state.touchStartX < _this.state.sidebarWidth) {\n          if (_this.state.touchCurrentX > _this.state.touchStartX) {\n            return _this.state.sidebarWidth + _this.state.touchStartX - _this.state.touchCurrentX;\n          }\n          return _this.state.sidebarWidth;\n        }\n        return Math.min(window.innerWidth - _this.state.touchCurrentX, _this.state.sidebarWidth);\n      }\n\n      if (_this.props.position === 'left') {\n        if (_this.props.open && _this.state.touchStartX < _this.state.sidebarWidth) {\n          if (_this.state.touchCurrentX > _this.state.touchStartX) {\n            return _this.state.sidebarWidth;\n          }\n          return _this.state.sidebarWidth - _this.state.touchStartX + _this.state.touchCurrentX;\n        }\n        return Math.min(_this.state.touchCurrentX, _this.state.sidebarWidth);\n      }\n    };\n\n    _this.touchSidebarHeight = function () {\n      // if the sidebar is open and start point of drag is inside the sidebar\n      // we will only drag the distance they moved their finger\n      // otherwise we will move the sidebar to be below the finger.\n      if (_this.props.position === 'bottom') {\n        if (_this.props.open && window.innerHeight - _this.state.touchStartY < _this.state.sidebarHeight) {\n          if (_this.state.touchCurrentY > _this.state.touchStartY) {\n            return _this.state.sidebarHeight + _this.state.touchStartY - _this.state.touchCurrentY;\n          }\n          return _this.state.sidebarHeight;\n        }\n        return Math.min(window.innerHeight - _this.state.touchCurrentY, _this.state.sidebarHeight);\n      }\n\n      if (_this.props.position === 'top') {\n        var touchStartOffsetY = _this.state.touchStartY - _this.state.sidebarTop;\n        if (_this.props.open && touchStartOffsetY < _this.state.sidebarHeight) {\n          if (_this.state.touchCurrentY > _this.state.touchStartY) {\n            return _this.state.sidebarHeight;\n          }\n          return _this.state.sidebarHeight - _this.state.touchStartY + _this.state.touchCurrentY;\n        }\n        return Math.min(_this.state.touchCurrentY - _this.state.dragHandleTop, _this.state.sidebarHeight);\n      }\n    };\n\n    _this.renderStyle = function (_ref) {\n      var sidebarStyle = _ref.sidebarStyle,\n          isTouching = _ref.isTouching,\n          overlayStyle = _ref.overlayStyle,\n          contentStyle = _ref.contentStyle;\n\n      if (_this.props.position === 'right' || _this.props.position === 'left') {\n        sidebarStyle.transform = 'translateX(0%)';\n        sidebarStyle.WebkitTransform = 'translateX(0%)';\n        if (isTouching) {\n          var percentage = _this.touchSidebarWidth() / _this.state.sidebarWidth;\n          // slide open to what we dragged\n          if (_this.props.position === 'right') {\n            sidebarStyle.transform = 'translateX(' + (1 - percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateX(' + (1 - percentage) * 100 + '%)';\n          }\n          if (_this.props.position === 'left') {\n            sidebarStyle.transform = 'translateX(-' + (1 - percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateX(-' + (1 - percentage) * 100 + '%)';\n          }\n          // fade overlay to match distance of drag\n          overlayStyle.opacity = percentage;\n          overlayStyle.visibility = 'visible';\n        }\n        if (contentStyle) {\n          contentStyle[_this.props.position] = _this.state.sidebarWidth + 'px';\n        }\n      }\n      if (_this.props.position === 'top' || _this.props.position === 'bottom') {\n        sidebarStyle.transform = 'translateY(0%)';\n        sidebarStyle.WebkitTransform = 'translateY(0%)';\n        if (isTouching) {\n          var _percentage = _this.touchSidebarHeight() / _this.state.sidebarHeight;\n          // slide open to what we dragged\n          if (_this.props.position === 'bottom') {\n            sidebarStyle.transform = 'translateY(' + (1 - _percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateY(' + (1 - _percentage) * 100 + '%)';\n          }\n          if (_this.props.position === 'top') {\n            sidebarStyle.transform = 'translateY(-' + (1 - _percentage) * 100 + '%)';\n            sidebarStyle.WebkitTransform = 'translateY(-' + (1 - _percentage) * 100 + '%)';\n          }\n          // fade overlay to match distance of drag\n          overlayStyle.opacity = _percentage;\n          overlayStyle.visibility = 'visible';\n        }\n        if (contentStyle) {\n          contentStyle[_this.props.position] = _this.state.sidebarHeight + 'px';\n        }\n      }\n    };\n\n    _this.state = {\n      // the detected width of the sidebar in pixels\n      sidebarWidth: 0,\n      sidebarHeight: 0,\n      sidebarTop: 0,\n      dragHandleTop: 0,\n\n      // keep track of touching params\n      touchIdentifier: null,\n      touchStartX: null,\n      touchStartY: null,\n      touchCurrentX: null,\n      touchCurrentY: null,\n\n      // if touch is supported by the browser\n      touchSupported: (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && 'ontouchstart' in window\n    };\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.saveSidebarSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      // filter out the updates when we're touching\n      if (!this.isTouching()) {\n        this.saveSidebarSize();\n      }\n    }\n\n    // This logic helps us prevents the user from sliding the sidebar horizontally\n    // while scrolling the sidebar vertically. When a scroll event comes in, we're\n    // cancelling the ongoing gesture if it did not move horizontally much.\n\n\n    // True if the on going gesture X distance is less than the cancel distance\n\n\n    // calculate the sidebarWidth based on current touch info\n\n    // calculate the sidebarHeight based on current touch info\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _rootCls,\n          _this2 = this;\n\n      var _props = this.props,\n          className = _props.className,\n          style = _props.style,\n          prefixCls = _props.prefixCls,\n          position = _props.position,\n          transitions = _props.transitions,\n          touch = _props.touch,\n          enableDragHandle = _props.enableDragHandle,\n          sidebar = _props.sidebar,\n          children = _props.children,\n          docked = _props.docked,\n          open = _props.open;\n\n\n      var sidebarStyle = _extends({}, this.props.sidebarStyle);\n      var contentStyle = _extends({}, this.props.contentStyle);\n      var overlayStyle = _extends({}, this.props.overlayStyle);\n\n      var rootCls = (_rootCls = {}, _defineProperty(_rootCls, className, !!className), _defineProperty(_rootCls, prefixCls, true), _defineProperty(_rootCls, prefixCls + '-' + position, true), _rootCls);\n\n      var rootProps = { style: style };\n      var isTouching = this.isTouching();\n\n      if (isTouching) {\n        this.renderStyle({ sidebarStyle: sidebarStyle, isTouching: true, overlayStyle: overlayStyle });\n      } else if (docked) {\n        if (this.state.sidebarWidth !== 0) {\n          rootCls[prefixCls + '-docked'] = true;\n          this.renderStyle({ sidebarStyle: sidebarStyle, contentStyle: contentStyle });\n        }\n      } else if (open) {\n        rootCls[prefixCls + '-open'] = true;\n        this.renderStyle({ sidebarStyle: sidebarStyle });\n        overlayStyle.opacity = 1;\n        overlayStyle.visibility = 'visible';\n      }\n\n      if (isTouching || !transitions) {\n        sidebarStyle.transition = 'none';\n        sidebarStyle.WebkitTransition = 'none';\n        contentStyle.transition = 'none';\n        overlayStyle.transition = 'none';\n      }\n\n      var dragHandle = null;\n\n      if (this.state.touchSupported && touch) {\n        if (open) {\n          rootProps.onTouchStart = function (ev) {\n            _this2.notTouch = true;\n            _this2.onTouchStart(ev);\n          };\n          rootProps.onTouchMove = this.onTouchMove;\n          rootProps.onTouchEnd = this.onTouchEnd;\n          rootProps.onTouchCancel = this.onTouchEnd;\n          rootProps.onScroll = this.onScroll;\n        } else if (enableDragHandle) {\n          dragHandle = React.createElement('div', { className: prefixCls + '-draghandle', style: this.props.dragHandleStyle,\n            onTouchStart: this.onTouchStart, onTouchMove: this.onTouchMove,\n            onTouchEnd: this.onTouchEnd, onTouchCancel: this.onTouchEnd,\n            ref: 'dragHandle'\n          });\n        }\n      }\n\n      // const evt = {};\n      // // FastClick use touchstart instead of click\n      // if (this.state.touchSupported) {\n      //   evt.onTouchStart = () => {\n      //     this.notTouch = true;\n      //     this.onOverlayClicked();\n      //   };\n      //   evt.onTouchEnd = () => {\n      //     this.notTouch = false;\n      //     this.setState({\n      //       touchIdentifier: null,\n      //     });\n      //   };\n      // } else {\n      //   evt.onClick = this.onOverlayClicked;\n      // }\n\n      return React.createElement(\n        'div',\n        _extends({ className: classNames(rootCls) }, rootProps),\n        React.createElement(\n          'div',\n          { className: prefixCls + '-sidebar', style: sidebarStyle,\n            ref: 'sidebar'\n          },\n          sidebar\n        ),\n        React.createElement('div', { className: prefixCls + '-overlay',\n          style: overlayStyle,\n          role: 'presentation',\n          ref: 'overlay',\n          onClick: this.onOverlayClicked\n        }),\n        React.createElement(\n          'div',\n          { className: prefixCls + '-content', style: contentStyle,\n            ref: 'content'\n          },\n          dragHandle,\n          children\n        )\n      );\n    }\n  }]);\n\n  return Drawer;\n}(React.Component);\n\nDrawer.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  // main content to render\n  children: PropTypes.node.isRequired,\n\n  // styles\n  // styles: PropTypes.shape({\n  //   dragHandle: PropTypes.object,\n  // }),\n  style: PropTypes.object,\n  sidebarStyle: PropTypes.object,\n  contentStyle: PropTypes.object,\n  overlayStyle: PropTypes.object,\n  dragHandleStyle: PropTypes.object,\n\n  // sidebar content to render\n  sidebar: PropTypes.node.isRequired,\n\n  // boolean if sidebar should be docked\n  docked: PropTypes.bool,\n\n  // boolean if sidebar should slide open\n  open: PropTypes.bool,\n\n  // boolean if transitions should be disabled\n  transitions: PropTypes.bool,\n\n  // boolean if touch gestures are enabled\n  touch: PropTypes.bool,\n  enableDragHandle: PropTypes.bool,\n\n  // where to place the sidebar\n  position: PropTypes.oneOf(['left', 'right', 'top', 'bottom']),\n\n  // distance we have to drag the sidebar to toggle open state\n  dragToggleDistance: PropTypes.number,\n\n  // callback called when the overlay is clicked\n  onOpenChange: PropTypes.func\n};\nDrawer.defaultProps = {\n  prefixCls: 'rmc-drawer',\n  sidebarStyle: {},\n  contentStyle: {},\n  overlayStyle: {},\n  dragHandleStyle: {},\n  docked: false,\n  open: false,\n  transitions: true,\n  touch: true,\n  enableDragHandle: true,\n  position: 'left',\n  dragToggleDistance: 30,\n  onOpenChange: function onOpenChange() {}\n};\nexport default Drawer;"]},"metadata":{},"sourceType":"module"}