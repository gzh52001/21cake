{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\n\nfunction noop() {}\n\nfunction defaultParser(input) {\n  return input.replace(/[^\\w\\.-]+/g, '');\n}\n/**\n * When click and hold on a button - the speed of auto changin the value.\n */\n\n\nvar SPEED = 200;\n/**\n * When click and hold on a button - the delay before auto changin the value.\n */\n\nvar DELAY = 600;\n/**\n * Max Safe Integer -- on IE this is not available, so manually set the number in that case.\n * The reason this is used, instead of Infinity is because numbers above the MSI are unstable\n */\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar BaseComponent = function (_React$Component) {\n  _inherits(BaseComponent, _React$Component);\n\n  function BaseComponent(props) {\n    _classCallCheck(this, BaseComponent);\n\n    var _this = _possibleConstructorReturn(this, (BaseComponent.__proto__ || Object.getPrototypeOf(BaseComponent)).call(this, props));\n\n    _this.onChange = function (e) {\n      var _this$props = _this.props,\n          parser = _this$props.parser,\n          onChange = _this$props.onChange;\n      var input = parser && parser(_this.getValueFromEvent(e).trim());\n\n      _this.setState({\n        inputValue: input\n      });\n\n      onChange && onChange(_this.toNumberWhenUserInput(input)); // valid number or invalid string\n    };\n\n    _this.onFocus = function () {\n      _this.setState({\n        focused: true\n      });\n\n      var onFocus = _this.props.onFocus;\n      onFocus && onFocus.apply(undefined, arguments);\n    };\n\n    _this.onBlur = function (e) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      _this.setState({\n        focused: false\n      });\n\n      var value = _this.getCurrentValidValue(_this.state.inputValue);\n\n      e.persist(); // fix https://github.com/react-component/input-number/issues/51\n\n      _this.setValue(value, function () {\n        var onBlur = _this.props.onBlur;\n        onBlur && onBlur.apply(undefined, [e].concat(args));\n      });\n    };\n\n    _this.getCurrentValidValue = function (value) {\n      var val = value;\n\n      if (val === '') {\n        val = '';\n      } else if (!_this.isNotCompleteNumber(val)) {\n        val = _this.getValidValue(val);\n      } else {\n        val = _this.state.value;\n      }\n\n      return _this.toNumber(val);\n    };\n\n    _this.getValidValue = function (value) {\n      var val = parseFloat(value); // https://github.com/ant-design/ant-design/issues/7358\n\n      if (isNaN(val)) {\n        return value;\n      }\n\n      if (val < _this.props.min) {\n        val = _this.props.min;\n      }\n\n      if (val > _this.props.max) {\n        val = _this.props.max;\n      }\n\n      return val;\n    };\n\n    _this.setValue = function (v, callback) {\n      // trigger onChange\n      var newValue = _this.isNotCompleteNumber(parseFloat(v)) ? undefined : parseFloat(v);\n      var changed = newValue !== _this.state.value || '' + newValue !== '' + _this.state.inputValue; // https://github.com/ant-design/ant-design/issues/7363\n\n      if (!('value' in _this.props)) {\n        _this.setState({\n          value: newValue,\n          inputValue: _this.toPrecisionAsStep(v)\n        }, callback);\n      } else {\n        // always set input value same as value\n        _this.setState({\n          inputValue: _this.toPrecisionAsStep(_this.state.value)\n        }, callback);\n      }\n\n      if (changed) {\n        var onChange = _this.props.onChange;\n        onChange && onChange(newValue);\n      }\n    };\n\n    _this.getPrecision = function (value) {\n      if ('precision' in _this.props) {\n        return _this.props.precision;\n      }\n\n      var valueString = value.toString();\n\n      if (valueString.indexOf('e-') >= 0) {\n        return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n      }\n\n      var precision = 0;\n\n      if (valueString.indexOf('.') >= 0) {\n        precision = valueString.length - valueString.indexOf('.') - 1;\n      }\n\n      return precision;\n    }; // step={1.0} value={1.51}\n    // press +\n    // then value should be 2.51, rather than 2.5\n    // if this.props.precision is undefined\n    // https://github.com/react-component/input-number/issues/39\n\n\n    _this.getMaxPrecision = function (currentValue) {\n      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if ('precision' in _this.props) {\n        return _this.props.precision;\n      }\n\n      var step = _this.props.step;\n\n      var ratioPrecision = _this.getPrecision(ratio);\n\n      var stepPrecision = _this.getPrecision(step);\n\n      var currentValuePrecision = _this.getPrecision(currentValue);\n\n      if (!currentValue) {\n        return ratioPrecision + stepPrecision;\n      }\n\n      return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n    };\n\n    _this.getPrecisionFactor = function (currentValue) {\n      var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      var precision = _this.getMaxPrecision(currentValue, ratio);\n\n      return Math.pow(10, precision);\n    };\n\n    _this.toPrecisionAsStep = function (num) {\n      if (_this.isNotCompleteNumber(num) || num === '') {\n        return num;\n      }\n\n      var precision = Math.abs(_this.getMaxPrecision(num));\n\n      if (!isNaN(precision)) {\n        return Number(num).toFixed(precision);\n      }\n\n      return num.toString();\n    }; // '1.' '1x' 'xx' '' => are not complete numbers\n\n\n    _this.isNotCompleteNumber = function (num) {\n      return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;\n    };\n\n    _this.toNumber = function (num) {\n      if (_this.isNotCompleteNumber(num)) {\n        return num;\n      }\n\n      if ('precision' in _this.props) {\n        return Number(Number(num).toFixed(_this.props.precision));\n      }\n\n      return Number(num);\n    }; // '1.0' '1.00'  => may be a inputing number\n\n\n    _this.toNumberWhenUserInput = function (num) {\n      // num.length > 16 => prevent input large number will became Infinity\n      if ((/\\.\\d*0$/.test(num) || num.length > 16) && _this.state.focused) {\n        return num;\n      }\n\n      return _this.toNumber(num);\n    };\n\n    _this.stepCompute = function (type, val, rat) {\n      var _this$props2 = _this.props,\n          step = _this$props2.step,\n          min = _this$props2.min;\n\n      var precisionFactor = _this.getPrecisionFactor(val, rat);\n\n      var precision = Math.abs(_this.getMaxPrecision(val, rat));\n      var result = void 0;\n      var direct = type === 'up' ? 1 : -1;\n\n      if (typeof val === 'number') {\n        result = ((precisionFactor * val + direct * precisionFactor * +step * rat) / precisionFactor).toFixed(precision);\n      } else {\n        result = min === -Infinity ? direct * +step : min;\n      }\n\n      return _this.toNumber(result);\n    };\n\n    _this.step = function (type, e) {\n      var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      if (e) {\n        e.preventDefault();\n      }\n\n      var props = _this.props;\n\n      if (props.disabled) {\n        return false;\n      }\n\n      var value = _this.getCurrentValidValue(_this.state.inputValue) || 0;\n\n      if (_this.isNotCompleteNumber(value)) {\n        return false;\n      }\n\n      var val = _this.stepCompute(type, value, ratio);\n\n      var outOfRange = val > props.max || val < props.min;\n\n      if (val > props.max) {\n        val = props.max;\n      } else if (val < props.min) {\n        val = props.min;\n      }\n\n      _this.setValue(val);\n\n      _this.setState({\n        focused: true\n      });\n\n      return !outOfRange;\n    };\n\n    _this.stop = function () {\n      if (_this.autoStepTimer) {\n        clearTimeout(_this.autoStepTimer);\n      }\n    };\n\n    _this.action = function (type, e, ratio, recursive) {\n      if (e.persist) {\n        e.persist();\n      }\n\n      _this.stop();\n\n      if (_this.step(type, e, ratio)) {\n        _this.autoStepTimer = setTimeout(function () {\n          _this.action(type, e, ratio, true);\n        }, recursive ? SPEED : DELAY);\n      }\n    };\n\n    _this.down = function (e, ratio, recursive) {\n      _this.action('down', e, ratio, recursive);\n    };\n\n    _this.up = function (e, ratio, recursive) {\n      _this.action('up', e, ratio, recursive);\n    };\n\n    var value = void 0;\n\n    if ('value' in props) {\n      value = props.value;\n    } else {\n      value = props.defaultValue;\n    }\n\n    value = _this.toNumber(value);\n    _this.state = {\n      inputValue: _this.toPrecisionAsStep(value),\n      value: value,\n      focused: props.autoFocus\n    };\n    return _this;\n  }\n\n  _createClass(BaseComponent, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps) {\n        var value = this.state.focused ? nextProps.value : this.getValidValue(nextProps.value);\n        this.setState({\n          value: value,\n          inputValue: value\n        });\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.stop();\n    }\n  }]);\n\n  return BaseComponent;\n}(React.Component);\n\nexport default BaseComponent;\nBaseComponent.defaultProps = {\n  max: MAX_SAFE_INTEGER,\n  min: -MAX_SAFE_INTEGER,\n  step: 1,\n  style: {},\n  onChange: noop,\n  onFocus: noop,\n  onBlur: noop,\n  parser: defaultParser\n};\n;","map":{"version":3,"sources":["F:/1111111111/demo2/线下三阶段/三阶段小组项目/react/21cake/mycake/node_modules/rmc-input-number/es/base.js"],"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","noop","defaultParser","input","replace","SPEED","DELAY","MAX_SAFE_INTEGER","Number","Math","pow","BaseComponent","_React$Component","props","_this","__proto__","Object","getPrototypeOf","call","onChange","e","_this$props","parser","getValueFromEvent","trim","setState","inputValue","toNumberWhenUserInput","onFocus","focused","apply","undefined","arguments","onBlur","_len","length","args","Array","_key","value","getCurrentValidValue","state","persist","setValue","concat","val","isNotCompleteNumber","getValidValue","toNumber","parseFloat","isNaN","min","max","v","callback","newValue","changed","toPrecisionAsStep","getPrecision","precision","valueString","toString","indexOf","parseInt","slice","getMaxPrecision","currentValue","ratio","step","ratioPrecision","stepPrecision","currentValuePrecision","getPrecisionFactor","num","abs","toFixed","test","stepCompute","type","rat","_this$props2","precisionFactor","result","direct","Infinity","preventDefault","disabled","outOfRange","stop","autoStepTimer","clearTimeout","action","recursive","setTimeout","down","up","defaultValue","autoFocus","key","componentWillReceiveProps","nextProps","componentWillUnmount","Component","defaultProps","style"],"mappings":"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","sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nfunction noop() {}\nfunction defaultParser(input) {\n    return input.replace(/[^\\w\\.-]+/g, '');\n}\n/**\n * When click and hold on a button - the speed of auto changin the value.\n */\nvar SPEED = 200;\n/**\n * When click and hold on a button - the delay before auto changin the value.\n */\nvar DELAY = 600;\n/**\n * Max Safe Integer -- on IE this is not available, so manually set the number in that case.\n * The reason this is used, instead of Infinity is because numbers above the MSI are unstable\n */\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar BaseComponent = function (_React$Component) {\n    _inherits(BaseComponent, _React$Component);\n\n    function BaseComponent(props) {\n        _classCallCheck(this, BaseComponent);\n\n        var _this = _possibleConstructorReturn(this, (BaseComponent.__proto__ || Object.getPrototypeOf(BaseComponent)).call(this, props));\n\n        _this.onChange = function (e) {\n            var _this$props = _this.props,\n                parser = _this$props.parser,\n                onChange = _this$props.onChange;\n\n            var input = parser && parser(_this.getValueFromEvent(e).trim());\n            _this.setState({ inputValue: input });\n            onChange && onChange(_this.toNumberWhenUserInput(input)); // valid number or invalid string\n        };\n        _this.onFocus = function () {\n            _this.setState({\n                focused: true\n            });\n            var onFocus = _this.props.onFocus;\n\n            onFocus && onFocus.apply(undefined, arguments);\n        };\n        _this.onBlur = function (e) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            _this.setState({\n                focused: false\n            });\n            var value = _this.getCurrentValidValue(_this.state.inputValue);\n            e.persist(); // fix https://github.com/react-component/input-number/issues/51\n            _this.setValue(value, function () {\n                var onBlur = _this.props.onBlur;\n\n                onBlur && onBlur.apply(undefined, [e].concat(args));\n            });\n        };\n        _this.getCurrentValidValue = function (value) {\n            var val = value;\n            if (val === '') {\n                val = '';\n            } else if (!_this.isNotCompleteNumber(val)) {\n                val = _this.getValidValue(val);\n            } else {\n                val = _this.state.value;\n            }\n            return _this.toNumber(val);\n        };\n        _this.getValidValue = function (value) {\n            var val = parseFloat(value);\n            // https://github.com/ant-design/ant-design/issues/7358\n            if (isNaN(val)) {\n                return value;\n            }\n            if (val < _this.props.min) {\n                val = _this.props.min;\n            }\n            if (val > _this.props.max) {\n                val = _this.props.max;\n            }\n            return val;\n        };\n        _this.setValue = function (v, callback) {\n            // trigger onChange\n            var newValue = _this.isNotCompleteNumber(parseFloat(v)) ? undefined : parseFloat(v);\n            var changed = newValue !== _this.state.value || '' + newValue !== '' + _this.state.inputValue; // https://github.com/ant-design/ant-design/issues/7363\n            if (!('value' in _this.props)) {\n                _this.setState({\n                    value: newValue,\n                    inputValue: _this.toPrecisionAsStep(v)\n                }, callback);\n            } else {\n                // always set input value same as value\n                _this.setState({\n                    inputValue: _this.toPrecisionAsStep(_this.state.value)\n                }, callback);\n            }\n            if (changed) {\n                var onChange = _this.props.onChange;\n\n                onChange && onChange(newValue);\n            }\n        };\n        _this.getPrecision = function (value) {\n            if ('precision' in _this.props) {\n                return _this.props.precision;\n            }\n            var valueString = value.toString();\n            if (valueString.indexOf('e-') >= 0) {\n                return parseInt(valueString.slice(valueString.indexOf('e-') + 2), 10);\n            }\n            var precision = 0;\n            if (valueString.indexOf('.') >= 0) {\n                precision = valueString.length - valueString.indexOf('.') - 1;\n            }\n            return precision;\n        };\n        // step={1.0} value={1.51}\n        // press +\n        // then value should be 2.51, rather than 2.5\n        // if this.props.precision is undefined\n        // https://github.com/react-component/input-number/issues/39\n        _this.getMaxPrecision = function (currentValue) {\n            var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            if ('precision' in _this.props) {\n                return _this.props.precision;\n            }\n            var step = _this.props.step;\n\n            var ratioPrecision = _this.getPrecision(ratio);\n            var stepPrecision = _this.getPrecision(step);\n            var currentValuePrecision = _this.getPrecision(currentValue);\n            if (!currentValue) {\n                return ratioPrecision + stepPrecision;\n            }\n            return Math.max(currentValuePrecision, ratioPrecision + stepPrecision);\n        };\n        _this.getPrecisionFactor = function (currentValue) {\n            var ratio = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n            var precision = _this.getMaxPrecision(currentValue, ratio);\n            return Math.pow(10, precision);\n        };\n        _this.toPrecisionAsStep = function (num) {\n            if (_this.isNotCompleteNumber(num) || num === '') {\n                return num;\n            }\n            var precision = Math.abs(_this.getMaxPrecision(num));\n            if (!isNaN(precision)) {\n                return Number(num).toFixed(precision);\n            }\n            return num.toString();\n        };\n        // '1.' '1x' 'xx' '' => are not complete numbers\n        _this.isNotCompleteNumber = function (num) {\n            return isNaN(num) || num === '' || num === null || num && num.toString().indexOf('.') === num.toString().length - 1;\n        };\n        _this.toNumber = function (num) {\n            if (_this.isNotCompleteNumber(num)) {\n                return num;\n            }\n            if ('precision' in _this.props) {\n                return Number(Number(num).toFixed(_this.props.precision));\n            }\n            return Number(num);\n        };\n        // '1.0' '1.00'  => may be a inputing number\n        _this.toNumberWhenUserInput = function (num) {\n            // num.length > 16 => prevent input large number will became Infinity\n            if ((/\\.\\d*0$/.test(num) || num.length > 16) && _this.state.focused) {\n                return num;\n            }\n            return _this.toNumber(num);\n        };\n        _this.stepCompute = function (type, val, rat) {\n            var _this$props2 = _this.props,\n                step = _this$props2.step,\n                min = _this$props2.min;\n\n            var precisionFactor = _this.getPrecisionFactor(val, rat);\n            var precision = Math.abs(_this.getMaxPrecision(val, rat));\n            var result = void 0;\n            var direct = type === 'up' ? 1 : -1;\n            if (typeof val === 'number') {\n                result = ((precisionFactor * val + direct * precisionFactor * +step * rat) / precisionFactor).toFixed(precision);\n            } else {\n                result = min === -Infinity ? direct * +step : min;\n            }\n            return _this.toNumber(result);\n        };\n        _this.step = function (type, e) {\n            var ratio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n            if (e) {\n                e.preventDefault();\n            }\n            var props = _this.props;\n            if (props.disabled) {\n                return false;\n            }\n            var value = _this.getCurrentValidValue(_this.state.inputValue) || 0;\n            if (_this.isNotCompleteNumber(value)) {\n                return false;\n            }\n            var val = _this.stepCompute(type, value, ratio);\n            var outOfRange = val > props.max || val < props.min;\n            if (val > props.max) {\n                val = props.max;\n            } else if (val < props.min) {\n                val = props.min;\n            }\n            _this.setValue(val);\n            _this.setState({\n                focused: true\n            });\n            return !outOfRange;\n        };\n        _this.stop = function () {\n            if (_this.autoStepTimer) {\n                clearTimeout(_this.autoStepTimer);\n            }\n        };\n        _this.action = function (type, e, ratio, recursive) {\n            if (e.persist) {\n                e.persist();\n            }\n            _this.stop();\n            if (_this.step(type, e, ratio)) {\n                _this.autoStepTimer = setTimeout(function () {\n                    _this.action(type, e, ratio, true);\n                }, recursive ? SPEED : DELAY);\n            }\n        };\n        _this.down = function (e, ratio, recursive) {\n            _this.action('down', e, ratio, recursive);\n        };\n        _this.up = function (e, ratio, recursive) {\n            _this.action('up', e, ratio, recursive);\n        };\n        var value = void 0;\n        if ('value' in props) {\n            value = props.value;\n        } else {\n            value = props.defaultValue;\n        }\n        value = _this.toNumber(value);\n        _this.state = {\n            inputValue: _this.toPrecisionAsStep(value),\n            value: value,\n            focused: props.autoFocus\n        };\n        return _this;\n    }\n\n    _createClass(BaseComponent, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if ('value' in nextProps) {\n                var value = this.state.focused ? nextProps.value : this.getValidValue(nextProps.value);\n                this.setState({\n                    value: value,\n                    inputValue: value\n                });\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.stop();\n        }\n    }]);\n\n    return BaseComponent;\n}(React.Component);\n\nexport default BaseComponent;\n\nBaseComponent.defaultProps = {\n    max: MAX_SAFE_INTEGER,\n    min: -MAX_SAFE_INTEGER,\n    step: 1,\n    style: {},\n    onChange: noop,\n    onFocus: noop,\n    onBlur: noop,\n    parser: defaultParser\n};\n;"]},"metadata":{},"sourceType":"module"}